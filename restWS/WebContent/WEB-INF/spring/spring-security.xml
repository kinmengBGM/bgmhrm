<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<global-method-security pre-post-annotations="enabled" />

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/protected/**" access="hasRole('ROLE_USER')" />

		<http-basic />
	</http>
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username, password, true from users where username=?"
				authorities-by-username-query="SELECT users.username, role.role FROM users 
						LEFT JOIN usertorole
						INNER JOIN role 
							ON usertorole.userRoleId = role.id
						ON usertorole.userId = users.id
						WHERE username = ?" />
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

</beans:beans>